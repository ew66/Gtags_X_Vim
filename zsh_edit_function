# /*
#  * xvim - Automator to find and open the src files using GNU global tags.
#  *
#  * Copyright (C) 2014 Edgar C.Y. Wang & Howrd T.H. Chung & Ferry C.H. Chen
#  * xxxxyyyyy409@gmail.com & howard721206@gmail & c.c.hsien@gmail.com
#  *
#  * This file is released under the GPL v2.
#  */

function gcode()
{
    unset target
    global_cmd=(global -x $1)
    # if using global -r for searching refferenced pattern
    if [[ $1 == '-r' ]];then
        global_cmd=(global -rx $2)
    elif [[ $1 == '-s' ]];then
        global_cmd=(global -sx $2)
    fi
    
    global_cmd_rst=`$global_cmd`
  
    while read -r line
    do
        path_line=`(echo $line) | (awk -F' ' '{print $3}')`
        num=`(echo $line) | (awk -F' ' '{print $2}')`
        target+=($(echo "$path_line":"$num" ))
    done <<< "$global_cmd_rst"
    genSelectListCode ${target[@]}
}

function xvim() 
{
    unset target
    global_cmd=(global -x $1)
    # if using global -r for searching refferenced pattern
    if [[ $1 == '-r' ]];then
        global_cmd=(global -rx $2)
    elif [[ $1 == '-s' ]];then
        global_cmd=(global -sx $2)
    fi
    
    global_cmd_rst=`$global_cmd`
  
    while read -r line
    do
#        #path_line=`echo $line|cut -d' ' -f3`
#        #num=`echo $line|cut -d' ' -f2`

        path_line=`(echo $line) | (awk -F' ' '{print $3}')`
        num=`(echo $line) | (awk -F' ' '{print $2}')`
        target+=($(echo "$path_line":"$num" ))
    done <<< "$global_cmd_rst"
#    echo ${#target[@]}
    genSelectListVim ${target[@]}

}

function xgrep()
{
    unset target
	echo $@
    while read -r line
    do
	line_temp=`echo $line | sed 's/ //g'`
	target+=("$line_temp")
    done <<< "$(grep -n $@)"
	genSelectList ${target[@]}
}

function genSelectListCode()
{
  editor=code
  genSelectList $@
}

function genSelectListVim()
{
  editor=vim
  genSelectList $@
}

function genSelectList()
{
    unset target
    target=("$@")
    if [ ${#target[@]} -gt 1 ];then
         echo "more than 1 source, choose 1:"
         select chooseID in ${target[@]}; do
             case $chooseID in
                 * )
                     targetPath=$chooseID
                     break;;
             esac
         done
    elif [ ${#target[@]} -eq 1 ]; then
        echo ${target[0]}
        targetPath=${target[0]}
    elif [ ${#target[@]} -eq 0 ]; then
        echo "no such file."
    fi
   
    ##path=`echo $targetPath|cut -d':' -f1`
    ##num=`echo $targetPath|cut -d':' -f2`
    tpath=`(echo $targetPath) | (cut -d':' -f1)`
    num=`(echo $targetPath) | (cut -d':' -f2)`
    $editor +$num $tpath
}
